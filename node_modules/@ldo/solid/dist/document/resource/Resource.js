"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Resource = void 0;
const FetchableDocument_1 = require("../FetchableDocument");
const DocumentFetchError_1 = require("../errors/DocumentFetchError");
class Resource extends FetchableDocument_1.FetchableDocument {
    constructor(uri, context, documentGetterOptions) {
        super(context, documentGetterOptions);
        this.uri = uri;
    }
    get accessRules() {
        return this.context.accessRulesStore.get(this);
    }
    get parentContainer() {
        return this.context.containerResourceStore.getContainerForResouce(this);
    }
    get ["@id"]() {
        return this.uri;
    }
    async delete() {
        this.beginWrite();
        const response = await this.context.fetch(this.uri, {
            method: "DELETE",
        });
        if (response.status >= 200 && response.status < 300) {
            this.endWrite();
            this.parentContainer?.removeContainedResources(this);
            return;
        }
        this.endWrite(new DocumentFetchError_1.DocumentFetchError(this, response.status, `Could not delete ${this.uri}`));
    }
    static normalizeUri(uri) {
        const [strippedHashUri] = uri.split("#");
        return strippedHashUri;
    }
}
exports.Resource = Resource;
//# sourceMappingURL=Resource.js.map