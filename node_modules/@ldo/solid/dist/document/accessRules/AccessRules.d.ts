import type { AccessModes as IAccessModes } from "@inrupt/solid-client";
import { FetchableDocument } from "../FetchableDocument";
import type { Resource } from "../resource/Resource";
import type { SolidLdoDatasetContext } from "../../SolidLdoDatasetContext";
import type { DocumentGetterOptions } from "../DocumentStore";
export type AccessModes = IAccessModes;
export declare class AccessRules extends FetchableDocument {
    readonly resource: Resource;
    private _publicAccess;
    private _agentAccess;
    constructor(resource: Resource, context: SolidLdoDatasetContext, documentGetterOptions?: DocumentGetterOptions);
    get publicAccess(): IAccessModes | null;
    get agentAccess(): Record<string, IAccessModes> | null;
    protected fetchDocument(): Promise<undefined>;
}
