"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateDataResource = void 0;
const rdf_utils_1 = require("@ldo/rdf-utils");
const guaranteeFetch_1 = require("../../util/guaranteeFetch");
const ErrorResult_1 = require("../results/error/ErrorResult");
const HttpErrorResult_1 = require("../results/error/HttpErrorResult");
async function updateDataResource(uri, datasetChanges, options) {
    try {
        const fetch = (0, guaranteeFetch_1.guaranteeFetch)(options?.fetch);
        const sparqlUpdate = await (0, rdf_utils_1.changesToSparqlUpdate)(datasetChanges);
        const response = await fetch(uri, {
            method: "PATCH",
            body: sparqlUpdate,
            headers: {
                "Content-Type": "application/sparql-update",
            },
        });
        const httpError = HttpErrorResult_1.HttpErrorResult.checkResponse(uri, response);
        if (httpError) {
            if (options?.onRollback) {
                options.onRollback();
            }
            return httpError;
        }
        return {
            isError: false,
            type: "updateSuccess",
            uri,
        };
    }
    catch (err) {
        return ErrorResult_1.UnexpectedResourceError.fromThrown(uri, err);
    }
}
exports.updateDataResource = updateDataResource;
//# sourceMappingURL=updateDataResource.js.map