import type { UnexpectedHttpError } from "../results/error/HttpErrorResult";
import { type HttpErrorResultType } from "../results/error/HttpErrorResult";
import type { DatasetRequestOptions } from "./requestOptions";
import type { ContainerUri, LeafUri } from "../../util/uriTypes";
import type { BinaryReadSuccess } from "../results/success/ReadSuccess";
import type { ContainerReadSuccess, DataReadSuccess } from "../results/success/ReadSuccess";
import type { AbsentReadSuccess } from "../results/success/ReadSuccess";
import { NoncompliantPodError } from "../results/error/NoncompliantPodError";
import { UnexpectedResourceError } from "../results/error/ErrorResult";
export type ReadLeafResult = BinaryReadSuccess | DataReadSuccess | AbsentReadSuccess | ReadResultError;
export type ReadContainerResult = ContainerReadSuccess | AbsentReadSuccess | ReadResultError;
export type ReadResultError = HttpErrorResultType | NoncompliantPodError | UnexpectedHttpError | UnexpectedResourceError;
export declare function readResource(uri: LeafUri, options?: DatasetRequestOptions): Promise<ReadLeafResult>;
export declare function readResource(uri: ContainerUri, options?: DatasetRequestOptions): Promise<ReadContainerResult>;
export declare function readResource(uri: string, options?: DatasetRequestOptions): Promise<ReadLeafResult | ReadContainerResult>;
