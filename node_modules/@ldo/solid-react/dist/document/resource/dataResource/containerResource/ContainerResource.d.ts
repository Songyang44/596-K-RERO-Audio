import type { Resource } from "../../Resource";
import type { BinaryResourceStore } from "../../binaryResource/BinaryResourceStore";
import type { DataResourceDependencies } from "../DataResource";
import { DataResource } from "../DataResource";
import type { DataResourceStore } from "../DataResourceStore";
export interface ContainerResourceDependencies extends DataResourceDependencies {
    dataResourceStore: DataResourceStore;
    binaryResourceStore: BinaryResourceStore;
}
export declare class ContainerResource extends DataResource {
    private _contains;
    private dependencies3;
    constructor(uri: string, dependencies: ContainerResourceDependencies);
    get contains(): Resource[];
    protected get binaryResourceStore(): BinaryResourceStore;
    protected get dataResourceStore(): DataResourceStore;
    protected fetchDocument(): Promise<import("../../../..").DocumentError | undefined>;
    addContainedResources(...resources: Resource[]): void;
    removeContainedResources(...resources: Resource[]): void;
}
