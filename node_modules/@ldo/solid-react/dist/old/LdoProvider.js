"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LdoProvider = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const cross_fetch_1 = __importDefault(require("cross-fetch"));
const ldo_1 = require("@ldo/ldo");
const LdoContext_1 = require("./LdoContext");
const UpdateManager_1 = require("./ldoHooks/helpers/UpdateManager");
const LdoProvider = ({ dataset, fetch, onDocumentError, children }) => {
    const finalFetch = (0, react_1.useMemo)(() => fetch || cross_fetch_1.default, [fetch]);
    const ldoDataset = (0, react_1.useMemo)(() => (0, ldo_1.createLdoDataset)(dataset), [dataset]);
    const storeDependencies = (0, react_1.useMemo)(() => {
        const dependencies = {
            onDocumentError,
            fetch: finalFetch,
            dataset: ldoDataset,
            updateManager: new UpdateManager_1.UpdateManager(),
        };
        const binaryResourceStore = new BinaryResourceStore(dependencies);
        const dataResourceStore = new DataResourceStore(dependencies);
        const containerResourceStore = new ContainerResourceStore(dependencies);
        const accessRulesStore = new AccessRulesStore(dependencies);
        dependencies.binaryResourceStore = binaryResourceStore;
        dependencies.dataResourceStore = dataResourceStore;
        dependencies.containerResourceStore = containerResourceStore;
        dependencies.accessRulesStore = accessRulesStore;
        return dependencies;
    }, []);
    (0, react_1.useEffect)(() => {
        storeDependencies.fetch = finalFetch;
        storeDependencies.dataset = ldoDataset;
        storeDependencies.onDocumentError = onDocumentError;
    }, [finalFetch, ldoDataset, onDocumentError]);
    return ((0, jsx_runtime_1.jsx)(LdoContext_1.LdoContextProvider, { value: storeDependencies, children: children }));
};
exports.LdoProvider = LdoProvider;
//# sourceMappingURL=LdoProvider.js.map