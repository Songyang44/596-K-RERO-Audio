import type { LdoBase, ShapeType } from "@ldo/ldo";
import type { SubjectNode } from "@ldo/rdf-utils";
import type { Resource, SolidLdoDataset } from "@ldo/solid";
export interface UseLdoMethods {
    dataset: SolidLdoDataset;
    getResource: SolidLdoDataset["getResource"];
    getSubject<Type extends LdoBase>(shapeType: ShapeType<Type>, subject: string | SubjectNode): Type | Error;
    createData<Type extends LdoBase>(shapeType: ShapeType<Type>, subject: string | SubjectNode, ...resources: Resource[]): Type;
    changeData<Type extends LdoBase>(input: Type, ...resources: Resource[]): Type;
    commitData(input: LdoBase): ReturnType<SolidLdoDataset["commitChangesToPod"]>;
}
export declare function createUseLdoMethods(dataset: SolidLdoDataset): UseLdoMethods;
